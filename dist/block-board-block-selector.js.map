{"version":3,"file":"block-board-block-selector.js","sourceRoot":"","sources":["../src/block-board-block-selector.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEzD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,MAAM,OAAO,uBAAwB,SAAQ,UAAU;IAAvD;;QAG6B,cAAS,GAAoB,EAAE,CAAC;IAgC7D,CAAC;IA9BC,WAAW,CAAC,CAAY,EAAE,KAAY;;QACpC,MAAA,CAAC,CAAC,YAAY,0CAAE,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,EAAE;IACnD,CAAC;IAED,cAAc,CAAC,GAAa;QAC1B,OAAO,IAAI,CAAA;;+DAEgD,GAAG,CAAC,IAAI;;YAE3D,GAAG,CAAC,MAAM,CAAC,GAAG,CACd,CAAC,KAAK,EAAE,EAAE,CACR,IAAI,CAAA;;;6BAGW,CAAC,CAAY,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC;mBACtD,KAAK,CAAC,IAAI;sBACP,CACX;;;KAGN,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;;KAE1D,CAAC;IACJ,CAAC;;AAjCM,8BAAM,GAAG,YAAY,CAAC;AAEF;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;0DAAiC","sourcesContent":["import { LitElement, html, property } from \"lit-element\";\nimport { Block, BlockSet } from \"./types\";\nimport { sharedStyles } from \"./sharedStyles\";\n\nexport class BlockBoardBlockSelector extends LitElement {\n  static styles = sharedStyles;\n\n  @property({ type: Array }) blockSets: Array<BlockSet> = [];\n\n  onDragStart(e: DragEvent, block: Block) {\n    e.dataTransfer?.setData(\"blockName\", block.name);\n  }\n\n  renderBlockSet(set: BlockSet) {\n    return html`\n      <div class=\"column\" style=\"margin: 8px;\">\n        <span style=\"margin-bottom: 4px; font-weight: bold;\">${set.name}</span>\n        <div class=\"column\" style=\"margin: 8px;\">\n          ${set.blocks.map(\n            (block) =>\n              html`<span\n                style=\"margin-bottom: 4px;\"\n                draggable=\"true\"\n                @dragstart=${(e: DragEvent) => this.onDragStart(e, block)}\n                >${block.name}\n              </span>`\n          )}\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      <div class=\"column\">\n        ${this.blockSets.map((set) => this.renderBlockSet(set))}\n      </div>\n    `;\n  }\n}\n"]}