{"version":3,"file":"block-board.js","sourceRoot":"","sources":["../src/block-board.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css, LitElement, property, Constructor } from \"lit-element\";\nimport { Block, BlockLayout, BlockSet, BlockNode } from \"./types\";\nimport { sharedStyles } from \"./sharedStyles\";\nimport { BlockBoardLayoutEditor } from \"./block-board-layout-editor\";\nimport { ScopedElementsMixin as Scoped } from \"@open-wc/scoped-elements\";\nimport { BlockBoardLayoutRenderer } from \"./block-board-layout-renderer\";\nimport { BlockBoardBlockSelector } from \"./block-board-block-selector\";\nimport { Drawer } from \"scoped-material-components/mwc-drawer\";\nimport { IconButton } from \"scoped-material-components/mwc-icon-button\";\n\nexport class BlockBoard extends (Scoped(\n  LitElement\n) as Constructor<LitElement>) {\n  @property({ type: Boolean }) public editing: boolean = true;\n  @property({ type: Array }) private _blockSets: Array<BlockSet> = [];\n\n  set blockSets(blocks: BlockSet[]) {\n    this._blockSets = [...blocks];\n  }\n  get blockSets() {\n    return this._blockSets;\n  }\n\n  get availableBlocks() {\n    const allBlocks = this._blockSets.map((set) => set.blocks);\n    return ([] as Array<Block>).concat(...allBlocks);\n  }\n\n  @property({ type: Array }) blockLayout: BlockNode = {\n    direction: \"horizontal\",\n    slots: [undefined, undefined],\n    firstSlotRelativeSize: 0.5,\n  };\n\n  static styles = [\n    sharedStyles,\n    css`\n      :host {\n        display: flex;\n      }\n    `,\n  ];\n\n  static get scopedElements() {\n    return {\n      \"mwc-drawer\": Drawer,\n      \"block-board-layout-renderer\": BlockBoardLayoutRenderer,\n      \"block-board-layout-editor\": BlockBoardLayoutEditor,\n      \"block-board-block-selector\": BlockBoardBlockSelector,\n    };\n  }\n\n  getEditingLayout() {\n    const editor: BlockBoardLayoutEditor = this.shadowRoot?.getElementById(\n      \"layout-editor\"\n    ) as BlockBoardLayoutEditor;\n\n    return editor.blockLayout;\n  }\n\n  save(): BlockNode {\n    this.blockLayout = this.getEditingLayout();\n\n    this.editing = false;\n\n    this.dispatchEvent(\n      new CustomEvent(\"board-saved\", {\n        detail: { blockLayout: this.blockLayout },\n        composed: true,\n        bubbles: true,\n      })\n    );\n\n    return this.blockLayout;\n  }\n\n  renderLayout() {\n    return html`\n      <block-board-layout-renderer\n        style=\"flex: 1;\"\n        .blockLayout=${this.blockLayout}\n        .availableBlocks=${this.availableBlocks}\n      ></block-board-layout-renderer>\n    `;\n  }\n\n  renderEditingMode() {\n    return html`\n      <mwc-drawer style=\"flex: 1;\" hasHeader>\n        <span slot=\"title\"> Draggable blocks </span>\n\n        <div class=\"column\" style=\"margin: 0 16px;\">\n          <div class=\"row\" style=\"justify-content: flex-end;\"></div>\n          <block-board-block-selector\n            .blockSets=${this.blockSets}\n          ></block-board-block-selector>\n        </div>\n\n        <div slot=\"appContent\" class=\"column\" style=\"height: 100%;\">\n          <block-board-layout-editor\n            id=\"layout-editor\"\n            style=\"flex: 1;\"\n            class=\"column\"\n            .blockLayout=${this.blockLayout}\n            .availableBlocks=${this.availableBlocks}\n          ></block-board-layout-editor>\n        </div>\n      </mwc-drawer>\n    `;\n  }\n\n  render() {\n    if (this.editing) return this.renderEditingMode();\n    else return this.renderLayout();\n  }\n}\n"]}