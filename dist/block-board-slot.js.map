{"version":3,"file":"block-board-slot.js","sourceRoot":"","sources":["../src/block-board-slot.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAChE,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAGzC,MAAM,OAAO,cAAe,SAAQ,MAAM,CAAC,UAAU,CAAC;IAOpD,YAAY;QACV,8GAA8G;QAC9G,MAAM,cAAc,GAAK,IAAI,CAAC,UAE5B,CAAC,cAAc,CAAC;QAClB,uCAAuC;QACvC,MAAM,QAAQ,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;QACzE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAwB,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,EAAE,CAAC;IAChB,CAAC;CACF;AAlBC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CACb;AAGd;IADC,KAAK,CAAC,OAAO,CAAC;6CACK","sourcesContent":["import { html, LitElement, property, query } from \"lit-element\";\nimport { Scoped } from \"scoped-elements\";\nimport { Block } from \"./block\";\n\nexport class BlockBoardSlot extends Scoped(LitElement) {\n  @property({ type: Object })\n  block!: Block;\n\n  @query(\"#slot\")\n  _slot!: HTMLElement;\n\n  firstUpdated() {\n    // If we have included the scoped-registries polyfill, we'll have the CustomElementRegistry on our shadow root\n    const scopedRegistry = ((this.shadowRoot as any) as {\n      customElements: CustomElementRegistry;\n    }).customElements;\n    // Otherwise we just use the global one\n    const registry = scopedRegistry ? scopedRegistry : window.customElements;\n    this.block.render(registry, this.shadowRoot as ShadowRoot);\n  }\n\n  render() {\n    return html``;\n  }\n}\n"]}