{"version":3,"file":"block-board-layout-renderer.js","sourceRoot":"","sources":["../src/block-board-layout-renderer.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,UAAU,EACV,IAAI,EACJ,QAAQ,EAER,GAAG,GAEJ,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AACzD,OAAO,EAAE,mBAAmB,IAAI,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAEzE,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,MAAM,OAAO,wBAAyB,SAAS,MAAM,CACnD,UAAU,CACiB;IAU3B,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,kBAAkB,EAAE,cAAc;SACnC,CAAC;IACJ,CAAC;IAKD,UAAU,CAAC,IAAe;QACxB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YACxE,IAAI,CAAC,KAAK;gBAAE,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;YACnE,OAAO,IAAI,CAAA;iBACA,KAAK;;2BAEK,CAAC;SACvB;aAAM,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAChC;aAAM;YACL,OAAO,IAAI,CAAA,EAAE,CAAC;SACf;IACH,CAAC;IAED,YAAY,CAAC,WAAwB;QACnC,OAAO,IAAI,CAAA;;gBAEC,QAAQ,CAAC;YACf,GAAG,EAAE,WAAW,CAAC,SAAS,KAAK,YAAY;YAC3C,MAAM,EAAE,WAAW,CAAC,SAAS,KAAK,UAAU;SAC7C,CAAC;;;;kBAIQ,QAAQ,CAAC;YACf,IAAI,EAAE,WAAW,CAAC,qBAAqB,GAAG,GAAG,GAAG,GAAG;YACnD,OAAO,EAAE,MAAM;SAChB,CAAC;;YAEA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;kBAG/B,QAAQ,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,GAAG,WAAW,CAAC,qBAAqB,CAAC,GAAG,GAAG,GAAG,GAAG;YACzD,OAAO,EAAE,MAAM;SAChB,CAAC;;YAEA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;KAG5C,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;;AAhEM,+BAAM,GAAG;IACd,YAAY;IACZ,GAAG,CAAA;;;;KAIF;CACF,CAAC;AAQyB;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;iEAAgC;AAC9B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6DAAyB","sourcesContent":["import {\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n  css,\n  Constructor,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { styleMap } from \"lit-html/directives/style-map\";\nimport { ScopedElementsMixin as Scoped } from \"@open-wc/scoped-elements\";\nimport { BlockLayout, Block, BlockNode } from \"./types\";\nimport { BlockBoardSlot } from \"./block-board-slot\";\nimport { sharedStyles } from \"./sharedStyles\";\n\nexport class BlockBoardLayoutRenderer extends (Scoped(\n  LitElement\n) as Constructor<LitElement>) {\n  static styles = [\n    sharedStyles,\n    css`\n      :host {\n        display: flex;\n      }\n    `,\n  ];\n\n  static get scopedElements() {\n    return {\n      \"block-board-slot\": BlockBoardSlot,\n    };\n  }\n\n  @property({ type: Array }) availableBlocks!: Array<Block>;\n  @property({ type: Object }) blockLayout!: BlockNode;\n\n  renderSlot(slot: BlockNode): TemplateResult {\n    if (typeof slot === \"string\") {\n      const block = this.availableBlocks.find((block) => block.name === slot);\n      if (!block) throw new Error(`Tried to render an unexisting block`);\n      return html`<block-board-slot\n        .block=${block}\n        style=\"flex: 1;\"\n      ></block-board-slot>`;\n    } else if (slot) {\n      return this.renderLayout(slot);\n    } else {\n      return html``;\n    }\n  }\n\n  renderLayout(blockLayout: BlockLayout): TemplateResult {\n    return html`\n      <div\n        class=${classMap({\n          row: blockLayout.direction === \"horizontal\",\n          column: blockLayout.direction === \"vertical\",\n        })}\n        style=\"flex: 1;\"\n      >\n        <div\n          style=${styleMap({\n            flex: blockLayout.firstSlotRelativeSize * 100 + \"%\",\n            display: \"flex\",\n          })}\n        >\n          ${this.renderSlot(blockLayout.slots[0])}\n        </div>\n        <div\n          style=${styleMap({\n            flex: (1 - blockLayout.firstSlotRelativeSize) * 100 + \"%\",\n            display: \"flex\",\n          })}\n        >\n          ${this.renderSlot(blockLayout.slots[1])}\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    return this.renderSlot(this.blockLayout);\n  }\n}\n"]}